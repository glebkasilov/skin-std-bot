from aiogram import Router, F, types
from bot import Bot
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery, FSInputFile
from aiogram.enums import ParseMode
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.utils.media_group import MediaGroupBuilder

from states.check_subscribe_state import CheckSubscribe
from keyboards.inline_keyboards.check_subscribe_keyboard import sub_ver_menu
from keyboards.reply_keyboards.subscribe_keyboard import sub_keyboard
from keyboards.reply_keyboards.register_keyboard import reg_keyboard
from filters.not_in_db_filter import NotInDbFilter


router = Router()


@router.message(F.text, Command("start"), NotInDbFilter())
async def cmd_start(message: Message, state: FSMContext):
    builder = MediaGroupBuilder(
        caption="""üî∑ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!

ü•á<strong>skin_std_bot</strong>-–ª—É—á—à–∏–π –±–æ—Ç –¥–ª—è –º–∞–π–Ω–∏–Ω–≥–∞ –∏ –ø–æ–∫—É–ø–∫–∏ –≤–Ω—É—Ç—Ä–∏–∏–≥—Ä–æ–≤–æ–π –≤–∞–ª—é—Ç—ã. –í –Ω–∞—à–µ–º —Å–æ–æ–±—â–µ—Å—Ç–≤–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç —É—á–∞—Å—Ç–≤–∏–µ –±–æ–ª–µ–µ 10 —á–µ–ª–æ–≤–µ–∫, –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –≤—Ä–µ–º–µ–Ω–∏ –∏ —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º.

‚úÖ–ò–º–µ–Ω–Ω–æ —É –Ω–∞—Å –µ—Å—Ç—å:
‚Ä¢<strong>–ù–ï</strong> –∫—É–ø–ª–µ–Ω–Ω—ã–µ –æ—Ç–∑—ã–≤—ã
‚Ä¢<strong>–æ—Ç–∑—ã–≤—á–∏–≤—ã–π</strong> —Å–æ—Å—Ç–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤

‚Ä¢<strong>–≤–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤</strong> –≤ —Ç–µ—á–µ–Ω–∏–∏ 2-—É—Ö –¥–Ω–µ–π"""
    )

    builder.add_photo(
        media=FSInputFile("images/greet.png"),
        parse_mode=ParseMode.HTML
    )

    await message.reply_media_group(
        media=builder.build()
    )
    await message.answer(
        text="–¢–µ–ø–µ—Ä—å –í—ã –¥–æ–ª–∂–Ω—ã –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à–∏ –∫–∞–Ω–∞–ª—ã!",
        reply_markup=sub_keyboard
    )
    await state.set_state(CheckSubscribe.not_subscribe)


@router.message(F.text == "–ü–æ–¥–ø–∏—Å–∫–∏", CheckSubscribe.not_subscribe, NotInDbFilter())
async def cmd_subscribe(message: Message, state: FSMContext):
    await message.answer(
        "–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª—ã",
        reply_markup=sub_ver_menu
    )


@router.callback_query(CheckSubscribe.not_subscribe, F.data == "sub_check", NotInDbFilter())
async def check_subs(callback: CallbackQuery, bot: Bot, state: FSMContext):
    user_channel_status = await bot.get_chat_member(chat_id='@freeskis', user_id=callback.from_user.id)
    user_channel_status1 = await bot.get_chat_member(chat_id='@skin_std_reviews', user_id=callback.from_user.id)
    user_channel_status2 = await bot.get_chat_member(chat_id='@skin_std_feedback', user_id=callback.from_user.id)
    if user_channel_status.status != 'left' and user_channel_status1.status != 'left' and user_channel_status2.status != 'left':
        await callback.message.edit_text('–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É!')
        await state.clear()
        await state.set_state(CheckSubscribe.is_subscribe)
        await callback.message.answer("–¢–µ–ø–µ—Ä—å –í—ã –º–æ–∂–µ—Ç–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –±–æ—Ç–µ", reply_markup=reg_keyboard)
    else:
        await bot.answer_callback_query(callback.id, text='–î–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª', show_alert=True)
